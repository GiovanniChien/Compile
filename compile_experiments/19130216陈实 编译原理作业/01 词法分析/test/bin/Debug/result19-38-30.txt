未知: #
标识符:include
界限符:<
标识符:iostream
界限符:>
未知: #
标识符:include
界限符:<
标识符:algorithm
界限符:>
未知: #
标识符:define
标识符:N
整数:7
未知: 

标识符:using
标识符:namespace
标识符:std
界限符:;
保留字:void
标识符:printTrace
界限符:(
保留字:int
未知: *
标识符:loc
界限符:,
保留字:int
标识符:n
界限符:,
保留字:int
未知: *
标识符:a
界限符:)
界限符:{
保留字:int
标识符:tmp
未知: =
标识符:loc
界限符:[
标识符:n
未知: ]
界限符:;
标识符:cout
界限符:<
界限符:<
标识符:a
界限符:[
标识符:n
未知: ]
界限符:<
界限符:<
未知: "
未知: "
界限符:;
保留字:while
界限符:(
标识符:tmp
未知: !
未知: =
未知: -
整数:1
界限符:)
界限符:{
标识符:cout
界限符:<
界限符:<
标识符:a
界限符:[
标识符:tmp
未知: ]
界限符:<
界限符:<
未知: "
未知: "
界限符:;
标识符:tmp
未知: =
标识符:loc
界限符:[
标识符:tmp
未知: ]
界限符:;
界限符:}
界限符:}
保留字:int
标识符:main
界限符:(
界限符:)
界限符:{
未知: /
未知: /
未知: 原
未知: 始
未知: 数
未知: 据
保留字:int
标识符:a
界限符:[
标识符:N
未知: ]
未知: =
界限符:{
整数:13
界限符:,
整数:50
界限符:,
整数:20
界限符:,
整数:10
界限符:,
整数:60
界限符:,
整数:15
界限符:,
整数:30
界限符:}
界限符:;
未知: /
未知: /
未知: 记
未知: 录
未知: 数
未知: 组
界限符:,
未知: 初
未知: 始
未知: 值
未知: 为
未知: -
整数:1
未知: 

保留字:int
标识符:res
界限符:[
标识符:N
未知: ]
界限符:;
标识符:memset
界限符:(
标识符:res
界限符:,
未知: -
整数:1
界限符:,
保留字:sizeof
界限符:(
标识符:res
界限符:)
界限符:)
界限符:;
未知: /
未知: /
未知: 记
未知: 录
未知: 位
未知: 置
未知: 数
未知: 组
保留字:int
标识符:loc
界限符:[
标识符:N
未知: ]
界限符:;
标识符:memset
界限符:(
标识符:loc
界限符:,
未知: -
整数:1
界限符:,
保留字:sizeof
界限符:(
标识符:loc
界限符:)
界限符:)
界限符:;
未知: /
未知: /
未知: 初
未知: 始
未知: 情
未知: 况
标识符:res
界限符:[
整数:0
未知: ]
未知: =
标识符:a
界限符:[
整数:0
未知: ]
界限符:;
标识符:res
界限符:[
整数:1
未知: ]
未知: =
标识符:a
界限符:[
整数:1
未知: ]
界限符:;
标识符:res
界限符:[
整数:2
未知: ]
未知: =
标识符:a
界限符:[
整数:0
未知: ]
未知: +
标识符:a
界限符:[
整数:2
未知: ]
界限符:;
标识符:loc
界限符:[
整数:2
未知: ]
未知: =
整数:0
界限符:;
保留字:for
界限符:(
保留字:int
标识符:i
未知: =
整数:3
界限符:;
标识符:i
界限符:<
标识符:N
界限符:;
标识符:i
未知: +
未知: +
界限符:)
界限符:{
保留字:int
标识符:cmp
未知: =
未知: -
整数:1
界限符:;
保留字:int
标识符:pre_loc
未知: =
未知: -
整数:1
界限符:;
界限符:;
未知: /
未知: /
未知: 取
未知: 出
未知: 之
未知: 前
未知: 值
未知: 最
未知: 大
未知: 的
保留字:if
界限符:(
标识符:res
界限符:[
标识符:i
未知: -
整数:2
未知: ]
界限符:<
未知: =
标识符:res
界限符:[
标识符:i
未知: -
整数:3
未知: ]
界限符:)
界限符:{
标识符:cmp
未知: =
标识符:res
界限符:[
标识符:i
未知: -
整数:3
未知: ]
界限符:;
标识符:pre_loc
未知: =
标识符:i
未知: -
整数:3
界限符:;
界限符:}
保留字:else
未知: 

界限符:{
标识符:cmp
未知: =
标识符:res
界限符:[
标识符:i
未知: -
整数:2
未知: ]
界限符:;
标识符:pre_loc
未知: =
标识符:i
未知: -
整数:2
界限符:;
界限符:}
未知: /
未知: /
未知: 记
未知: 录
标识符:res
界限符:[
标识符:i
未知: ]
未知: =
标识符:cmp
未知: +
标识符:a
界限符:[
标识符:i
未知: ]
界限符:;
标识符:loc
界限符:[
标识符:i
未知: ]
未知: =
标识符:pre_loc
界限符:;
界限符:}
保留字:for
界限符:(
保留字:int
标识符:j
未知: =
整数:0
界限符:;
标识符:j
界限符:<
标识符:N
界限符:;
标识符:j
未知: +
未知: +
界限符:)
界限符:{
标识符:cout
界限符:<
界限符:<
标识符:j
未知: +
整数:1
界限符:<
界限符:<
未知: "
未知: \
标识符:t
未知: "
界限符:;
界限符:}
标识符:cout
界限符:<
界限符:<
标识符:endl
界限符:;
保留字:for
界限符:(
标识符:j
未知: =
整数:0
界限符:;
标识符:j
界限符:<
标识符:N
界限符:;
标识符:j
未知: +
未知: +
界限符:)
界限符:{
标识符:cout
界限符:<
界限符:<
标识符:a
界限符:[
标识符:j
未知: ]
界限符:<
界限符:<
未知: "
未知: \
标识符:t
未知: "
界限符:;
界限符:}
标识符:cout
界限符:<
界限符:<
标识符:endl
界限符:;
保留字:for
界限符:(
标识符:j
未知: =
整数:0
界限符:;
标识符:j
界限符:<
标识符:N
界限符:;
标识符:j
未知: +
未知: +
界限符:)
界限符:{
标识符:cout
界限符:<
界限符:<
标识符:res
界限符:[
标识符:j
未知: ]
界限符:<
界限符:<
未知: "
未知: \
标识符:t
未知: "
界限符:;
界限符:}
标识符:cout
界限符:<
界限符:<
标识符:endl
界限符:;
保留字:for
界限符:(
保留字:int
标识符:k
未知: =
整数:0
界限符:;
标识符:k
界限符:<
标识符:N
界限符:;
标识符:k
未知: +
未知: +
界限符:)
界限符:{
标识符:cout
界限符:<
界限符:<
标识符:loc
界限符:[
标识符:k
未知: ]
界限符:<
界限符:<
未知: "
未知: \
标识符:t
未知: "
界限符:;
界限符:}
标识符:cout
界限符:<
界限符:<
标识符:endl
界限符:;
未知: /
未知: /
未知: 输
未知: 出
未知: 结
未知: 果
未知: 值
保留字:if
界限符:(
标识符:res
界限符:[
标识符:N
未知: -
整数:1
未知: ]
界限符:<
未知: =
标识符:res
界限符:[
标识符:N
未知: -
整数:2
未知: ]
界限符:)
界限符:{
标识符:cout
界限符:<
界限符:<
标识符:res
界限符:[
标识符:N
未知: -
整数:2
未知: ]
界限符:<
界限符:<
标识符:endl
界限符:;
标识符:printTrace
界限符:(
标识符:loc
界限符:,
标识符:N
未知: -
整数:2
界限符:,
标识符:a
界限符:)
界限符:;
界限符:}
保留字:else
未知: 

界限符:{
标识符:cout
界限符:<
界限符:<
标识符:res
界限符:[
标识符:N
未知: -
整数:1
未知: ]
界限符:<
界限符:<
标识符:endl
界限符:;
标识符:printTrace
界限符:(
标识符:loc
界限符:,
标识符:N
未知: -
整数:1
界限符:,
标识符:a
界限符:)
界限符:;
界限符:}
保留字:return
整数:0
界限符:;
界限符:}
未知: ￿
