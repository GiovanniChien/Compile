未知: #
标识符:include
界限符:<
标识符:iostream
界限符:>
未知: #
标识符:include
界限符:<
标识符:vector
界限符:>
标识符:using
标识符:namespace
标识符:std
界限符:;
未知: #
标识符:define
标识符:N
整数:100
未知: 

保留字:struct
标识符:Edge
未知: 

界限符:{
保留字:int
标识符:next
界限符:;
保留字:int
标识符:to
界限符:;
界限符:}
界限符:;
保留字:int
标识符:count1
未知: =
整数:0
界限符:;
保留字:int
标识符:head
界限符:[
标识符:N
未知: ]
界限符:;
保留字:int
标识符:v1
界限符:[
标识符:N
未知: ]
界限符:;
保留字:int
标识符:v2
界限符:[
标识符:N
未知: ]
界限符:;
标识符:vector
界限符:<
标识符:Edge
界限符:>
标识符:edge
界限符:;
保留字:void
标识符:add
界限符:(
保留字:int
标识符:u
界限符:,
保留字:int
标识符:v
界限符:)
界限符:{
标识符:Edge
标识符:a
未知: =
界限符:{
标识符:head
界限符:[
标识符:u
未知: ]
界限符:,
标识符:v
界限符:}
界限符:;
标识符:edge
界限符:.
标识符:push_back
界限符:(
标识符:a
界限符:)
界限符:;
标识符:head
界限符:[
标识符:u
未知: ]
未知: =
标识符:count1
未知: +
未知: +
界限符:;
界限符:}
保留字:int
标识符:min
界限符:(
保留字:int
标识符:a
界限符:,
保留字:int
标识符:b
界限符:)
界限符:{
保留字:if
界限符:(
标识符:a
界限符:>
标识符:b
界限符:)
界限符:{
保留字:return
标识符:b
界限符:;
界限符:}
保留字:else
未知: 

界限符:{
保留字:return
标识符:a
界限符:;
界限符:}
界限符:}
保留字:int
标识符:max
界限符:(
保留字:int
标识符:a
界限符:,
保留字:int
标识符:b
界限符:)
界限符:{
保留字:if
界限符:(
标识符:a
界限符:>
标识符:b
界限符:)
界限符:{
保留字:return
标识符:a
界限符:;
界限符:}
保留字:else
未知: 

界限符:{
保留字:return
标识符:b
界限符:;
界限符:}
界限符:}
保留字:void
标识符:dfs
界限符:(
保留字:int
标识符:s
界限符:)
界限符:{
保留字:if
界限符:(
标识符:head
界限符:[
标识符:s
未知: ]
未知: =
未知: =
未知: -
整数:1
界限符:)
界限符:{
标识符:v1
界限符:[
标识符:s
未知: ]
未知: =
整数:1
界限符:;
标识符:v2
界限符:[
标识符:s
未知: ]
未知: =
整数:0
界限符:;
保留字:return
界限符:;
界限符:}
保留字:int
标识符:sum1
未知: =
整数:0
界限符:;
保留字:int
标识符:sum2
未知: =
整数:0
界限符:;
保留字:for
界限符:(
保留字:int
标识符:i
未知: =
标识符:head
界限符:[
标识符:s
未知: ]
界限符:;
标识符:i
未知: !
未知: =
未知: -
整数:1
界限符:;
标识符:i
未知: =
标识符:edge
界限符:[
标识符:i
未知: ]
界限符:.
标识符:next
界限符:)
界限符:{
标识符:dfs
界限符:(
标识符:edge
界限符:[
标识符:i
未知: ]
界限符:.
标识符:to
界限符:)
界限符:;
标识符:sum1
未知: =
标识符:sum1
未知: +
标识符:v1
界限符:[
标识符:edge
界限符:[
标识符:i
未知: ]
界限符:.
标识符:to
未知: ]
界限符:;
标识符:v2
界限符:[
标识符:s
未知: ]
未知: =
标识符:v2
界限符:[
标识符:s
未知: ]
未知: +
标识符:max
界限符:(
标识符:v1
界限符:[
标识符:edge
界限符:[
标识符:i
未知: ]
界限符:.
标识符:to
未知: ]
界限符:,
标识符:v2
界限符:[
标识符:edge
界限符:[
标识符:i
未知: ]
界限符:.
标识符:to
未知: ]
界限符:)
界限符:;
界限符:}
标识符:v1
界限符:[
标识符:s
未知: ]
未知: =
标识符:sum2
未知: +
整数:1
界限符:;
界限符:}
保留字:void
标识符:main
界限符:(
界限符:)
界限符:{
保留字:for
界限符:(
保留字:int
标识符:i
未知: =
整数:0
界限符:;
标识符:i
界限符:<
标识符:N
界限符:;
标识符:i
未知: +
未知: +
界限符:)
界限符:{
标识符:head
界限符:[
标识符:i
未知: ]
未知: =
未知: -
整数:1
界限符:;
标识符:v1
界限符:[
标识符:i
未知: ]
未知: =
整数:0
界限符:;
标识符:v2
界限符:[
标识符:i
未知: ]
未知: =
整数:0
界限符:;
界限符:}
保留字:int
标识符:n
界限符:,
标识符:a
界限符:,
标识符:b
界限符:;
标识符:cin
界限符:>
界限符:>
标识符:n
界限符:;
保留字:for
界限符:(
保留字:int
标识符:i
未知: =
整数:0
界限符:;
标识符:i
界限符:<
标识符:n
界限符:;
标识符:i
未知: +
未知: +
界限符:)
界限符:{
标识符:cin
界限符:>
界限符:>
标识符:a
界限符:>
界限符:>
标识符:b
界限符:;
标识符:add
界限符:(
标识符:a
界限符:,
标识符:b
界限符:)
界限符:;
界限符:}
标识符:dfs
界限符:(
整数:0
界限符:)
界限符:;
标识符:cout
界限符:<
界限符:<
界限符:(
标识符:v1
界限符:[
整数:0
未知: ]
界限符:>
标识符:v2
界限符:[
整数:0
未知: ]
未知: ?
标识符:v1
界限符:[
整数:0
未知: ]
未知: :
标识符:v2
界限符:[
整数:0
未知: ]
界限符:)
界限符:<
界限符:<
标识符:endl
界限符:;
界限符:}
